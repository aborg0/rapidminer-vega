
package com.rapid_i.repository.wsimport;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.1 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebService(name = "RepositoryService", targetNamespace = "http://service.web.rapidrepository.com/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface RepositoryService {


    /**
     * 
     * @param entryLocation
     * @return
     *     returns com.rapid_i.repository.wsimport.EntryResponse
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getEntry", targetNamespace = "http://service.web.rapidrepository.com/", className = "com.rapid_i.repository.wsimport.GetEntry")
    @ResponseWrapper(localName = "getEntryResponse", targetNamespace = "http://service.web.rapidrepository.com/", className = "com.rapid_i.repository.wsimport.GetEntryResponse")
    public EntryResponse getEntry(
        @WebParam(name = "entryLocation", targetNamespace = "")
        String entryLocation);

    /**
     * 
     * @param entryLocation
     * @return
     *     returns com.rapid_i.repository.wsimport.Response
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteEntry", targetNamespace = "http://service.web.rapidrepository.com/", className = "com.rapid_i.repository.wsimport.DeleteEntry")
    @ResponseWrapper(localName = "deleteEntryResponse", targetNamespace = "http://service.web.rapidrepository.com/", className = "com.rapid_i.repository.wsimport.DeleteEntryResponse")
    public Response deleteEntry(
        @WebParam(name = "entryLocation", targetNamespace = "")
        String entryLocation);

    /**
     * 
     * @param revisionNumber
     * @param entryLocation
     * @return
     *     returns com.rapid_i.repository.wsimport.ProcessContentsResponse
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getProcessContents", targetNamespace = "http://service.web.rapidrepository.com/", className = "com.rapid_i.repository.wsimport.GetProcessContents")
    @ResponseWrapper(localName = "getProcessContentsResponse", targetNamespace = "http://service.web.rapidrepository.com/", className = "com.rapid_i.repository.wsimport.GetProcessContentsResponse")
    public ProcessContentsResponse getProcessContents(
        @WebParam(name = "entryLocation", targetNamespace = "")
        String entryLocation,
        @WebParam(name = "revisionNumber", targetNamespace = "")
        int revisionNumber);

    /**
     * 
     * @param parentLocation
     * @param blobName
     * @return
     *     returns com.rapid_i.repository.wsimport.EntryResponse
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createBlob", targetNamespace = "http://service.web.rapidrepository.com/", className = "com.rapid_i.repository.wsimport.CreateBlob")
    @ResponseWrapper(localName = "createBlobResponse", targetNamespace = "http://service.web.rapidrepository.com/", className = "com.rapid_i.repository.wsimport.CreateBlobResponse")
    public EntryResponse createBlob(
        @WebParam(name = "parentLocation", targetNamespace = "")
        String parentLocation,
        @WebParam(name = "blobName", targetNamespace = "")
        String blobName);

    /**
     * 
     * @param folderLocation
     * @return
     *     returns com.rapid_i.repository.wsimport.FolderContentsResponse
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getFolderContents", targetNamespace = "http://service.web.rapidrepository.com/", className = "com.rapid_i.repository.wsimport.GetFolderContents")
    @ResponseWrapper(localName = "getFolderContentsResponse", targetNamespace = "http://service.web.rapidrepository.com/", className = "com.rapid_i.repository.wsimport.GetFolderContentsResponse")
    public FolderContentsResponse getFolderContents(
        @WebParam(name = "folderLocation", targetNamespace = "")
        String folderLocation);

    /**
     * 
     * @param processXML
     * @param entryLocation
     * @return
     *     returns com.rapid_i.repository.wsimport.Response
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "storeProcess", targetNamespace = "http://service.web.rapidrepository.com/", className = "com.rapid_i.repository.wsimport.StoreProcess")
    @ResponseWrapper(localName = "storeProcessResponse", targetNamespace = "http://service.web.rapidrepository.com/", className = "com.rapid_i.repository.wsimport.StoreProcessResponse")
    public Response storeProcess(
        @WebParam(name = "entryLocation", targetNamespace = "")
        String entryLocation,
        @WebParam(name = "processXML", targetNamespace = "")
        String processXML);

    /**
     * 
     * @param parentLocation
     * @param subfolderName
     * @return
     *     returns com.rapid_i.repository.wsimport.EntryResponse
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "makeFolder", targetNamespace = "http://service.web.rapidrepository.com/", className = "com.rapid_i.repository.wsimport.MakeFolder")
    @ResponseWrapper(localName = "makeFolderResponse", targetNamespace = "http://service.web.rapidrepository.com/", className = "com.rapid_i.repository.wsimport.MakeFolderResponse")
    public EntryResponse makeFolder(
        @WebParam(name = "parentLocation", targetNamespace = "")
        String parentLocation,
        @WebParam(name = "subfolderName", targetNamespace = "")
        String subfolderName);

}
